# User-specific files
*.suo
*.user*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
Drops/

# Visual Studio
.vs/
TestResults/

# Ignore web.config as it contains machine specific paths - file will be generated by VS
/src/Prototype.AspNetService/web.config
/artifacts
# Location of files output by the serialization code generator. The files are only output to disk as a workaround for using coverlet with generated code. 
# The problem is that the compiler indicates a file location in the PDB even though the code exists only in memory. Coverlet then attempts to load that
# file even when given explicit instructions to exclude that file. Coverlet fails to load source code from the whole module and therefore 
# cannot report any code coverage. That in turn generates a build failure as part of the sonarqube setup.
/src/Publishing/Iit.OAPI.Framework.Publishing.Serialization.CodeGenerator/

# Ignore ResponseEngine generated files
/test/Publishing.L0Tests/Iit.OAPI.Framework.ResponseEngine.CodeGenerator/
/test/ResponseEngine.L0Tests/Iit.OAPI.Framework.ResponseEngine.CodeGenerator/
/TestService/FrameworkTestService/Iit.OAPI.Framework.ResponseEngine.CodeGenerator/
/test/ResponseEngine.OpenApi.L0Tests/Iit.OAPI.Framework.ResponseEngine.CodeGenerator/
/test/ResponseEngine.OpenApi.L0Tests/Iit.OAPI.Oas.CodeGeneration/
/test/ResponseEngine.OpenApi.CompilationTest/Iit.OAPI.Oas.CodeGeneration/

# Ignore build generated files
*.g.cs
/.idea/.idea.Iit.OAPI.Framework/.idea
